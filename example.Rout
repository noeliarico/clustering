
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R es un software libre y viene sin GARANTIA ALGUNA.
Usted puede redistribuirlo bajo ciertas circunstancias.
Escriba 'license()' o 'licence()' para detalles de distribucion.

R es un proyecto colaborativo con muchos contribuyentes.
Escriba 'contributors()' para obtener mÃ¡s informaciÃ³n y
'citation()' para saber cÃ³mo citar R o paquetes de R en publicaciones.

Escriba 'demo()' para demostraciones, 'help()' para el sistema on-line de ayuda,
o 'help.start()' para abrir el sistema de ayuda HTML con su navegador.
Escriba 'q()' para salir de R.

[Previously saved workspace restored]

> # Import the necessary libraries
> library(clusterlab)
> library(tidyverse)
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ“[39m [34mggplot2[39m 3.2.1     [32mâœ“[39m [34mpurrr  [39m 0.3.3
[32mâœ“[39m [34mtibble [39m 2.1.3     [32mâœ“[39m [34mdplyr  [39m 0.8.3
[32mâœ“[39m [34mtidyr  [39m 1.0.0     [32mâœ“[39m [34mstringr[39m 1.4.0
[32mâœ“[39m [34mreadr  [39m 1.3.1     [32mâœ“[39m [34mforcats[39m 0.4.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mx[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mx[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
> 
> # Some illustrative seeds after a manual exploration
> # 1830 With this seed the distance with the worst performance is Euclidean dsitance
> # 2456
> # 1617
> # Set the seed
> the_seed <- 2456
> # Create a dataset of 2 varibles with 5 clustes of three points each
> data <- clusterlab(centers = 5, # the number of clusters to simulate 
+                    # the number of units of the radius of the circle on which the clusters are generated
+                    r = 2, 
+                    # the number of samples in each cluster
+                    numbervec = c(3, 3, 3, 3, 3),
+                    # standard deviation of each cluster
+                    sdvec = c(1, 3, 2, 1, 1),
+                    alphas = c(3, 5, 1, 4, 2),
+                    # the number of features for the data
+                    features = 2,
+                    seed = the_seed, showplots = FALSE)
***clusterlab***
mode: circle
simulating clusters...
finished.
> (points <- as_tibble(t(data$synthetic_data)) %>% rename(x = 1, y = 2))
[90m# A tibble: 15 x 2[39m
          x       y
      [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m
[90m 1[39m -[31m0[39m[31m.[39m[31m702[39m    0.402 
[90m 2[39m -[31m0[39m[31m.[39m[31m741[39m    0.466 
[90m 3[39m -[31m0[39m[31m.[39m[31m774[39m    0.503 
[90m 4[39m  2.07    -[31m0[39m[31m.[39m[31m251[39m 
[90m 5[39m  1.17     0.163 
[90m 6[39m  0.888    0.305 
[90m 7[39m  0.464   -[31m0[39m[31m.[39m[31m118[39m 
[90m 8[39m  1.20    -[31m0[39m[31m.[39m[31m410[39m 
[90m 9[39m -[31m0[39m[31m.[39m[31m00[39m[31m1[4m9[24m[4m4[24m[39m  0.041[4m2[24m
[90m10[39m -[31m0[39m[31m.[39m[31m118[39m   -[31m0[39m[31m.[39m[31m287[39m 
[90m11[39m  0.115   -[31m0[39m[31m.[39m[31m435[39m 
[90m12[39m  0.535   -[31m0[39m[31m.[39m[31m506[39m 
[90m13[39m -[31m0[39m[31m.[39m[31m534[39m    0.023[4m4[24m
[90m14[39m -[31m0[39m[31m.[39m[31m777[39m    0.135 
[90m15[39m -[31m0[39m[31m.[39m[31m728[39m    0.119 
> 
> # Add column with the real cluster
> points <- points %>% mutate(cluster = data$identity_matrix$cluster)
> # The data is not normalized because this is already done in train_rkmeans
> 
> # Load the c methods that implements the distances and rkmeans
> dyn.load("02.method/distances/distances.so")
> dyn.load("02.method/rkmeans/rkmeans.so")
> 
> # Clustering with rkmeans
> set.seed(the_seed)
> out_points <- train_rkmeans(points, 5, iter.max = 5)
